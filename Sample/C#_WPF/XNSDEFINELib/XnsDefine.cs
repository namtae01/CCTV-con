public enum XBackupFormat
{
    BACKUP_SEC = 1,
    BACKUP_REC
}

public enum XSnapshotFormat
{
    SNAPSHOT_BMP = 0,
    SNAPSHOT_JPG
}

public enum XOSDType
{
    OSD_ALL = 0xFFFF,
    OSD_TIME1 = 0x0001,
    OSD_TIME2 = 0x0002,
    OSD_IPS = 0x0004,
    OSD_LOCAL_NAME = 0x0008,
    OSD_REMOTE_NAME = 0x0010,
    OSD_SPEED = 0x0020,
    OSD_PTZ = 0x0040,
    OSD_LISTEN = 0x0080,
    OSD_TALK = 0x0100,
    OSD_SENSOR = 0x0200,
    OSD_MOTION = 0x0400,
    OSD_DVR_RECORDING = 0x0800,
    OSD_LOCAL_RECORDING = 0x1000
}

public enum XMediaType
{
    XMEDIA_LIVE = 1,
    XMEDIA_PLAYBACK,
    XMEDIA_BACKUP,
    XMEDIA_METADATA,
};

public enum XLocalRecordingType
{
    SEC_WRITER = 1,
    REC_WRITER
}

public enum XPTZControl
{
    XPTZ_UP = 1,
    XPTZ_DOWN,
    XPTZ_LEFT,
    XPTZ_RIGHT,
    XPTZ_UPLEFT,
    XPTZ_UPRIGHT,
    XPTZ_DOWNLEFT,
    XPTZ_DOWNRIGHT,
    XPTZ_ZOOMIN,
    XPTZ_ZOOMOUT,
    XPTZ_STOP,
    XPTZ_FOCUS_NEAR,
    XPTZ_FOCUS_FAR,
    XPTZ_FOCUS_STOP,
    XPTZ_IRIS_OPEN,
    XPTZ_IRIS_CLOSE,
};

public enum XPTZMenu
{
    XMENU_UP = 1,
    XMENU_DOWN,
    XMENU_LEFT,
    XMENU_RIGHT,
    XMENU_ENTER,
    XMENU_ON,
    XMENU_OFF,
    XMENU_CANCEL,
};

public enum XHPTZFunction
{
    XHPTZ_PRESET = 1,
    XHPTZ_AUTOPAN,
    XHPTZ_SCAN,
    XHPTZ_PATTERN,
};

public enum XRecType
{
    REC_TYPE_ALL = 0xFFFF,
    REC_TYPE_NONE = 0x00,
    REC_TYPE_MOTION = 0x01,
    REC_TYPE_ALARM = 0x02,
    REC_TYPE_VLOSS = 0x04,
    REC_TYPE_MANUAL = 0x08,
    REC_TYPE_CONTINUOS = 0x10
};

public enum XEventType
{
    XEVENTTYPE_ALL = 0xFF,
    XEVENTTYPE_ALARM = 0x01,
    XEVENTTYPE_MOTION = 0x02,
    XEVENTTYPE_VIDEOLOSS = 0x04
};

public enum XAddressType
{
    XADDRESS_STATICIP = 1,
    XADDRESS_URL,
    XADDRESS_SSDDNS,
    XADDRESS_S1DDNS
};

public enum XErrorCode
{
    ERR_SUCCESS = 0,
    ERR_UNKNOWN,
    // Initialize
    ERR_INVALID_CFG_FILE = 0x10,
    ERR_CFG_FILE_READ_ERROR,
    ERR_ALREADY_INITIALIZE,
    ERR_NOT_INITIALIZE,
    // Device Connection
    ERR_NOT_SUPPORTED_DEVICE = 0x20,
    ERR_EXCEED_CONNECTION,
    ERR_NOT_CONNECT,
    ERR_MAC_CONFLICT,
    ERR_INVALID_VERSION,
    ERR_INVALID_MODEL,
    ERR_ALREADY_CONNECT,
    // Login Error
    ERR_INVALID_USERID = 0x30,
    ERR_WRONG_PASSWORD,
    ERR_LOGIN,
    ERR_ADMIN_CONFLICT,
    ERR_USER_FULL,
    // Query Request
    ERR_XNS_BUSY = 0x40,
    ERR_BAD_NETWORK,
    ERR_REQUEST_TIME_OUT,
    ERR_INVALID_PARAMETER,
    ERR_NO_PERMISSION,
    ERR_NOT_SUPPORTED_COMMAND,
    // File Transfer
    ERR_INVALID_FILE = 0x50,
    ERR_UPLOAD_FAIL,
    ERR_IMPORT_FAIL,
    ERR_EXPORT_FAIL,
    ERR_FILE_TRANSFERRING,
    // Media Open
    ERR_MEDIA_ALREADY_OPEND = 0x60,
    // PTZ Control
    ERR_PTZ_CONFLICT = 0x70,
    // XnsWindow Error
    ERR_INVALID_OBJID = 0x80,
    ERR_ALREADY_RUN,
    ERR_MEDIA_NOT_OPENED,
    ERR_MEDIA_PAUSED,
    ERR_MEDIA_PLAYED,
    ERR_MEDIA_DISCONNECTED,
    // File Error
    ERR_FILE_ALREADY_OPEND = 0x90,
    ERR_FILE_NOT_OPEND,
    ERR_FILE_OPEN,
    ERR_FILE_SEEK,
    ERR_FILE_READ,
    ERR_FILE_WRITE,
    ERR_INVALID_FRAME,
    ERR_WRITE_STOPPED,
    ERR_WRITE_LIMITED,
    ERR_WRITE_EMPTY,
    ERR_DISK_FULL,
    ERR_READ_END,
    ERR_ALREADY_RECORDED,
    ERR_BACKUP_DOING,

    ERR_INVALID_XML = 0Xb0,
    ERR_OVERLAPPED,
    ERR_LIMITED,

    ERR_BUFFER_FULL = 0Xc0,
    ERR_INVALID_SEQUENCE,
    ERR_TALK_ALREADY_USE,
    
    
    // DataMan
    ERR_DEVICE_FULL = 0Xd0,
    ERR_DEVICE_CONFLICT,
    ERR_GROUP_FULL,
    ERR_GROUP_DEVICE_FULL,
    ERR_GROUP_DEVICE_CONFLICT,
    ERR_GROUP_FAVORITE_FULL,
    ERR_NAME_CONFLICT,
    ERR_USERID_CONFLICT,
    ERR_USERID_FULL,
};

public enum XUnitCap
{
    XCTL_CAP_NONE = 0,
    XCTL_CAP_SW_UPLOAD,
    XCTL_CAP_CFG_IMPORT,
    XCTL_CAP_CFG_EXPORT,
    XCTL_CAP_CONN_FORCED,
    XCTL_CAP_MEDIA_AUTHORITY,
    XCTL_CAP_FSPEED1,
    XCTL_CAP_FSPEED2,
    XCTL_CAP_FSPEED4,
    XCTL_CAP_FSPEED8,
    XCTL_CAP_FSPEED16,			//10
    XCTL_CAP_FSPEED32,
    XCTL_CAP_FSPEED64,
    XCTL_CAP_BSPEED1,
    XCTL_CAP_BSPEED2,
    XCTL_CAP_BSPEED4,
    XCTL_CAP_BSPEED8,
    XCTL_CAP_BSPEED16,
    XCTL_CAP_BSPEED32,
    XCTL_CAP_BSPEED64,
    XCTL_CAP_FSSPEED1,			//20
    XCTL_CAP_FSSPEED2,
    XCTL_CAP_FSSPEED4,
    XCTL_CAP_FSSPEED8,
    XCTL_CAP_FSSPEED16,
    XCTL_CAP_FSSPEED32,
    XCTL_CAP_FSSPEED64,
    XCTL_CAP_BSSPEED1,
    XCTL_CAP_BSSPEED2,
    XCTL_CAP_BSSPEED4,
    XCTL_CAP_BSSPEED8,			//30
    XCTL_CAP_BSSPEED16,
    XCTL_CAP_BSSPEED32,
    XCTL_CAP_BSSPEED64,
    XCTL_CAP_SEEK,
    XCTL_CAP_FSTEP,
    XCTL_CAP_BSTEP,
    XCTL_CAP_LIVE,
    XCTL_CAP_PLAYBACK,
    XCTL_CAP_BACKUP,
    XCTL_CAP_SEARCH,			//40
    XCTL_CAP_LISTEN,
    XCTL_CAP_TALK,
    XCTL_CAP_CAM_MENU,
    XCTL_CAP_PTZ_PAN,
    XCTL_CAP_PTZ_TILT,
    XCTL_CAP_PTZ_ZOOM,
    XCTL_CAP_PTZ_SPEED,
    XCTL_CAP_PTZ_PRESET,
    XCTL_CAP_PTZ_PRESET_SVR,
    XCTL_CAP_PTZ_AUTOPAN,		//50
    XCTL_CAP_PTZ_SCAN,
    XCTL_CAP_PTZ_PATTERN,
    XCTL_CAP_PTZ_SWING,
    XCTL_CAP_PTZ_TOUR,
    XCTL_CAP_PTZ_POWER,
    XCTL_CAP_PTZ_FREE_MOVE,
    XCTL_CAP_PTZ_SPEED_ZOOM,
    XCTL_CAP_CAM_IRIS,
    XCTL_CAP_CAM_FOCUS,
    XCTL_CAP_CAM_BRIGHTNESS,
    XCTL_CAP_CAM_CONTRAST,		//60
    XCTL_CAP_ALARM_ONOFF,
    XCTL_CAP_DVR_EVENT_RESET,
    XCTL_CAP_DVR_MANUAL_REC_CONTROL,
    XCTL_CAP_DVR_REC_STATUS,
    XCTL_CAP_MOTION_SEARCH,				// [2010.08.10 wooseung.oh] Smart Search Added
    XCTL_CAP_PTZ_AREA_ZOOM,
    XCTL_CAP_PTZ_GET_POS,
    XCTL_CAP_PTZ_SET_POS,
    XCTL_CAP_OVERLAP_TRACK_SEARCH,		//70, //+ jeongguc.kang <2011.10.19> 중복구간 추가
    XCTL_CAP_POS_SEARCH,				//+ jeongguc.kang <2011.10.20> Search Pos 추가
    XCTL_CAP_PTZ_GET_POS_SPEED,
    XCTL_CAP_PTZ_SET_POS_SPEED,
    XCTL_CAP_POWER_RESTART,
    XCTL_CAP_BANDWIDTH,					//+ jeongguc.kang <2012.04.18> banamex 프로젝트 관련 bandwidth 커맨드 추가
    XCTL_CAP_SHUT_DOWN,
    XCTL_CAP_GET_PERMISSION,
    XCTL_CAP_SET_PERMISSION,
    XCTL_CAP_DIVIDE_VIDEO_AUDIO,
    XCTL_CAP_TRACKING,
    XCTL_CAP_FACE_DETECTION,				// <2014.10.21>
    XCTL_CAP2_AUDIO_DETECTION,				// <2014.10.21>
    XCTL_CAP2_ADVANCED_MOTION_DETECTION,	// <2014.10.21>
    XCTL_CAP3_RTP_METADATA,
};

public enum XConnect
{
    XDEVICE_STATUS_DISCONNECTED = 0,
    XDEVICE_STATUS_CONNECTED,
};

public enum XModelType
{
    XCTL_ALL = 255,
    XCTL_DVR = 1,
    XCTL_NETCAM = 2,
    XCTL_ENCODER = 4,
    XCTL_CAMERA = 8,
    XCTL_VIDEO = 16,
    XCTL_ALARM = 32,
    XCTL_SENSOR = 64,
    XCTL_ALARM_BEEP = 128,
};

public enum XStatusID
{
    XCAMERA_STATUS = 1,
    XRECORDING_STATUS,
    XLISTEN_STATUS,
    XTALK_STATUS,
    XALARM_STATUS,
    XLOCALREC_STATUS,
}

public enum XCodecType
{
    XVCODEC_UNKNOWN = 0,
    XVCODEC_MJPEG,
    XVCODEC_MP4V,
    XVCODEC_H264
}

public enum XIVEventType
{
    XIV_TYPE_PASSING = 0x00000001,
    XIV_TYPE_ENTERING = 0x00000010,
    XIV_TYPE_EXITING = 0x00000020,
    XIV_TYPE_APPEARING = 0x00000040,
    XIV_TYPE_DISAPPERING = 0x00000080,
    XIV_TYPE_SCENE_CHANGE = 0x00000100,
}

public enum XInputType
{
	XINPUT_VIDEO = 1,
	XINPUT_AUDIO,
	XINPUT_METADATA,
};

public enum XMediaProtocolType
{
    XMEDIA_PROTOCOL_TCP = 0x00,
    XMEDIA_PROTOCOL_UDP,
    XMEDIA_PROTOCOL_MULTICAST,
    XMEDIA_PROTOCOL_TCP_HTTP,
} ;

public enum XDeviceProtocolType
{
    XDEVICE_PROTOCOL_UNKNOWN = 0,
    XDEVICE_PROTOCOL_SUNAPI = 1,
    XDEVICE_PROTOCOL_SVNP = 2,
    XDEVICE_PROTOCOL_SVP = 3,
};